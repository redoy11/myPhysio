{"version":3,"sources":["component/Header/index.tsx","component/Slider/index.tsx","component/ServiceCard/index.tsx","component/Services/constants.ts","component/Services/index.tsx","component/Home/index.tsx","App/index.tsx","serviceWorker.ts","index.tsx"],"names":["Header","trigger","useScrollTrigger","disableHysteresis","threshold","AppBar","style","transition","color","className","position","Toolbar","Typography","variant","component","Icon","padding","src","width","Slider","ServiceCard","props","iconName","title","body","Card","CardContent","SERVICES","Services","Grid","container","justify","map","service","index","key","item","md","xs","Home","Container","Paper","elevation","alignItems","square","App","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","About","ThemeProvider","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wXAoDeA,G,MA/CU,WACvB,IAAMC,EAAUC,YAAiB,CAC/BC,mBAAmB,EACnBC,UAAW,MAGb,OACE,gBAAC,WAAD,KACE,gBAACC,EAAA,EAAD,CACEC,MAAO,CAAEC,WAAY,wBACrBC,MAAOP,EAAU,UAAY,cAC7BQ,UAAYR,EAA+B,GAArB,mBACtBS,SAAS,UAEPT,GACA,gBAACU,EAAA,EAAD,CAASF,UAAU,4BACjB,gBAACG,EAAA,EAAD,CAAYC,QAAQ,YAAYC,UAAU,OAA1C,gBAGA,gCACE,gBAACC,EAAA,EAAD,CAAMT,MAAO,CAAEU,QAAS,aAAxB,UAEF,gBAACJ,EAAA,EAAD,CAAYC,QAAQ,YAAYC,UAAU,OAA1C,gBAKJ,gBAACH,EAAA,EAAD,CAASF,UAAU,0BACjB,gBAACG,EAAA,EAAD,CAAYC,QAAQ,KAAKJ,UAAU,iBACjC,uBAAKQ,IAAI,qBAAqBC,MAAM,SAEtC,uBAAKT,UAAU,sBACf,gBAACG,EAAA,EAAD,CAAYC,QAAQ,KAAKJ,UAAWR,EAAU,2BAA6B,YAA3E,QAGA,gBAACW,EAAA,EAAD,CAAYC,QAAQ,KAAKJ,UAAWR,EAAU,2BAA6B,YAA3E,SAGA,gBAACW,EAAA,EAAD,CAAYC,QAAQ,KAAKJ,UAAWR,EAAU,2BAA6B,YAA3E,a,wBCbKkB,G,MA3BU,WACvB,OACE,gBAAC,WAAD,KACE,uBAAKV,UAAU,oBACb,uBAAKA,UAAU,oBACb,uBAAKA,UAAU,wBACb,qCACA,yNAMJ,uBAAKA,UAAU,uBACb,uBAAKA,UAAU,wBACb,qCACA,6N,wBCUGW,G,MAnBiC,SAACC,GAA6B,IACpEC,EAA0BD,EAA1BC,SAAUC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KACzB,OACE,gBAACC,EAAA,EAAD,CAAMhB,UAAU,eAAeI,QAAQ,YACrC,gBAACa,EAAA,EAAD,KACE,gBAACX,EAAA,EAAD,CAAMN,UAAU,eAAeD,MAAM,WAClCc,GAEH,gBAACV,EAAA,EAAD,CAAYH,UAAU,gBAAgBI,QAAQ,MAC5C,8BAASU,IAEX,gBAACX,EAAA,EAAD,CAAYH,UAAU,eAAeI,QAAQ,QAAQC,UAAU,KAC5DU,OCtBEG,EAAW,CACtB,CACEL,SAAU,kBACVC,MAAO,cACPC,KACE,+HAEJ,CACEF,SAAU,cACVC,MAAO,SACPC,KACE,+HAEJ,CACEF,SAAU,UACVC,MAAO,UACPC,KACE,gICASI,EAZY,WACzB,OACE,gBAACC,EAAA,EAAD,CAAMC,WAAW,EAAMC,QAAQ,gBAC5BJ,EAASK,KAAI,SAACC,EAASC,GAAV,OACZ,gBAACL,EAAA,EAAD,CAAMM,IAAG,kBAAaD,GAASE,MAAI,EAACC,GAAI,EAAGC,GAAI,IAC7C,gBAAC,EAAgBL,SCkDZM,EAtDQ,WACrB,OACE,gCACE,gBAAC,EAAD,MACA,gBAACC,EAAA,EAAD,CAAW/B,UAAU,kBACnB,gBAACgC,EAAA,EAAD,CAAOhC,UAAU,YAAYiC,UAAW,GACtC,gBAACb,EAAA,EAAD,CAAMpB,UAAU,sBAAsBqB,WAAW,EAAMC,QAAQ,SAASY,WAAW,UACjF,gBAACd,EAAA,EAAD,CAAMpB,UAAU,wBAAwB2B,MAAM,GAC5C,gBAACxB,EAAA,EAAD,CAAYJ,MAAM,gBAAgBC,UAAU,eAA5C,8fASJ,gBAACoB,EAAA,EAAD,CAAMpB,UAAU,mBAAmBqB,WAAW,EAAMC,QAAQ,UAC1D,gBAACF,EAAA,EAAD,CAAMpB,UAAU,qBAAqB6B,GAAI,GAAIF,MAAM,GACjD,gBAACxB,EAAA,EAAD,CAAYC,QAAQ,KAAKJ,UAAU,iBAAnC,uBAGA,gBAAC,EAAD,QAGJ,gBAACoB,EAAA,EAAD,CAAMpB,UAAU,gBAAgBqB,WAAW,EAAMC,QAAQ,SAASY,WAAW,UAC3E,gBAACd,EAAA,EAAD,CAAMpB,UAAU,sBAAsB6B,GAAI,GAAIF,MAAM,GAClD,gBAACK,EAAA,EAAD,CAAOG,QAAQ,GACb,gBAAChC,EAAA,EAAD,CAAYH,UAAU,qBAAqBD,MAAM,UAAUK,QAAQ,MAAnE,iBAIF,uBAAKJ,UAAU,mBAEjB,gBAACoB,EAAA,EAAD,CAAMpB,UAAU,8BAA8B4B,GAAI,EAAGC,GAAI,GAAIF,MAAM,GACjE,gBAACxB,EAAA,EAAD,CAAYC,QAAQ,KAAKL,MAAM,UAAUC,UAAU,eAAnD,uBAGA,gBAACG,EAAA,EAAD,CAAYC,QAAQ,QAAQL,MAAM,UAAUC,UAAU,qBAAtD,6SAMF,gBAACoB,EAAA,EAAD,CAAMpB,UAAU,sBAAsB4B,GAAI,EAAGC,GAAI,GAAIF,MAAM,GACzD,uBAAKnB,IAAI,yBAAyBR,UAAU,oB,gBCd3CoC,EA9BO,WACpB,IAAMC,EAAQC,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,YAIdC,EAAQ,sCAEd,OACE,oCACE,kBAACC,EAAA,EAAD,CAAeT,MAAOA,GACpB,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOU,KAAK,SAASC,OAAO,GACzBH,GAEH,kBAAC,IAAD,CAAOE,KAAK,IAAIC,OAAO,GACrB,kBAAC,EAAD,WCjBQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAeC,SAAUC,aACvB,kBAAC,EAAD,QAGJC,SAASC,eAAe,SD8HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.4926ab8c.chunk.js","sourcesContent":["import * as React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport { Toolbar, Typography, useScrollTrigger, Icon } from '@material-ui/core';\nimport './Header.css';\n\nconst Header: React.FC = () => {\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 120,\n  });\n\n  return (\n    <React.Fragment>\n      <AppBar\n        style={{ transition: 'all ease-in-out 0.5s' }}\n        color={trigger ? 'inherit' : 'transparent'}\n        className={!trigger ? 'header-container' : ''}\n        position=\"fixed\"\n      >\n        {!trigger && (\n          <Toolbar className=\"header-secondary-toolbar\">\n            <Typography variant=\"subtitle1\" component=\"div\">\n              For service,\n            </Typography>\n            <>\n              <Icon style={{ padding: '0px 10px' }}>phone</Icon>\n            </>\n            <Typography variant=\"subtitle1\" component=\"div\">\n              01999999999\n            </Typography>\n          </Toolbar>\n        )}\n        <Toolbar className=\"header-primary-toolbar\">\n          <Typography variant=\"h4\" className=\"nav-logo-item\">\n            <img src=\"/myphysio/logo.png\" width=\"120\" />\n          </Typography>\n          <div className=\"nav-space-between\" />\n          <Typography variant=\"h6\" className={trigger ? 'nav-item scroll-nav-item' : 'nav-item'}>\n            Home\n          </Typography>\n          <Typography variant=\"h6\" className={trigger ? 'nav-item scroll-nav-item' : 'nav-item'}>\n            About\n          </Typography>\n          <Typography variant=\"h6\" className={trigger ? 'nav-item scroll-nav-item' : 'nav-item'}>\n            Page\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n};\n\nexport default Header;\n","import * as React from 'react';\nimport './Slider.css';\n\nconst Slider: React.FC = () => {\n  return (\n    <React.Fragment>\n      <div className=\"Slider-container\">\n        <div className=\"Slider-slide top\">\n          <div className=\"Slider-slide-content\">\n            <h1>Slide 1</h1>\n            <p>\n              Slide Description. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque dictum, nulla ut\n              molestie porta, nisi dolor convallis sapien, vitae molestie ipsum leo sit amet felis.\n            </p>\n          </div>\n        </div>\n        <div className=\"Slider-slide bottom\">\n          <div className=\"Slider-slide-content\">\n            <h1>Slide 2</h1>\n            <p>\n              Slide Description. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque dictum, nulla ut\n              molestie porta, nisi dolor convallis sapien, vitae molestie ipsum leo sit amet felis.\n            </p>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Slider;\n","import * as React from 'react';\nimport { Card, CardContent, Typography, Icon } from '@material-ui/core';\nimport './ServiceCard.css';\n\ninterface ServiceCardProps {\n  iconName: string;\n  title: string;\n  body: string;\n}\n\nconst ServiceCard: React.FC<ServiceCardProps> = (props: ServiceCardProps) => {\n  const { iconName, title, body } = props;\n  return (\n    <Card className=\"service-card\" variant=\"outlined\">\n      <CardContent>\n        <Icon className=\"service-icon\" color=\"primary\">\n          {iconName}\n        </Icon>\n        <Typography className=\"service-title\" variant=\"h5\">\n          <strong>{title}</strong>\n        </Typography>\n        <Typography className=\"service-body\" variant=\"body2\" component=\"p\">\n          {body}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ServiceCard;\n","export const SERVICES = [\n  {\n    iconName: 'import_contacts',\n    title: 'Information',\n    body:\n      'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\n  },\n  {\n    iconName: 'account_box',\n    title: 'Advice',\n    body:\n      'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\n  },\n  {\n    iconName: 'support',\n    title: 'Support',\n    body:\n      'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\n  },\n];\n","import * as React from 'react';\nimport { Grid } from '@material-ui/core';\nimport ServiceCard from '../ServiceCard';\nimport { SERVICES } from './constants';\n\nconst Services: React.FC = () => {\n  return (\n    <Grid container={true} justify=\"space-evenly\">\n      {SERVICES.map((service, index) => (\n        <Grid key={`service_${index}`} item md={4} xs={12}>\n          <ServiceCard {...service} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nexport default Services;\n","import * as React from 'react';\nimport { Container, Typography, Paper, Grid } from '@material-ui/core';\nimport Slider from '../Slider';\nimport './Home.css';\nimport Services from '../Services';\n\nconst Home: React.FC = () => {\n  return (\n    <>\n      <Slider />\n      <Container className=\"home-container\">\n        <Paper className=\"home-body\" elevation={5}>\n          <Grid className=\"description-section\" container={true} justify=\"center\" alignItems=\"center\">\n            <Grid className=\"description-container\" item={true}>\n              <Typography color=\"textSecondary\" className=\"description\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque dictum, nulla ut molestie porta, nisi\n                dolor convallis sapien, vitae molestie ipsum leo sit amet felis. Praesent sed nisl vitae est maximus\n                interdum vitae sit amet felis. Interdum et malesuada fames ac ante ipsum primis in faucibus. Nullam\n                interdum quam eget nisi porttitor dignissim. Aliquam mi ligula, placerat dignissim efficitur sit amet,\n                euismod elementum nulla. Morbi finibus elit quis lorem posuere, sit amet convallis massa commodo.\n              </Typography>\n            </Grid>\n          </Grid>\n          <Grid className=\"services-section\" container={true} justify=\"center\">\n            <Grid className=\"services-container\" xs={12} item={true}>\n              <Typography variant=\"h6\" className=\"service-title\">\n                Services We provide\n              </Typography>\n              <Services />\n            </Grid>\n          </Grid>\n          <Grid className=\"story-section\" container={true} justify=\"center\" alignItems=\"center\">\n            <Grid className=\"story-section-title\" xs={12} item={true}>\n              <Paper square={true}>\n                <Typography className=\"story-title-margin\" color=\"primary\" variant=\"h4\">\n                  Latest Story\n                </Typography>\n              </Paper>\n              <div className=\"story-divider\" />\n            </Grid>\n            <Grid className=\"story-description-container\" md={6} xs={12} item={true}>\n              <Typography variant=\"h3\" color=\"inherit\" className=\"story-title\">\n                Fight against Covid\n              </Typography>\n              <Typography variant=\"body2\" color=\"inherit\" className=\"story-description\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque dictum, nulla ut molestie porta, nisi\n                dolor convallis sapien, vitae molestie ipsum leo sit amet felis. Praesent sed nisl vitae est maximus\n                interdum vitae sit amet felis. Interdum et malesuada fames ac ante ipsum primis in faucibus.\n              </Typography>\n            </Grid>\n            <Grid className=\"story-img-container\" md={6} xs={12} item={true}>\n              <img src=\"/myphysio/img_xray.jpg\" className=\"story-img\" />\n            </Grid>\n          </Grid>\n        </Paper>\n      </Container>\n    </>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom';\nimport Header from '../component/Header';\nimport Home from '../component/Home';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\n\nconst App: React.FC = () => {\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        light: '#7FCD46',\n        main: '#4A9F04',\n        dark: '#0F4C00',\n        contrastText: 'white',\n      },\n    },\n  });\n  const About = <p> About </p>;\n\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <Header />\n        <Switch>\n          <Route path=\"/about\" exact={true}>\n            {About}\n          </Route>\n          <Route path=\"/\" exact={true}>\n            <Home />\n          </Route>\n        </Switch>\n      </ThemeProvider>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}